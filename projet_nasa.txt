  _____  _____   ____       _ ______ _______   _   _           _____         
 |  __ \|  __ \ / __ \     | |  ____|__   __| | \ | |   /\    / ____|  /\    
 | |__) | |__) | |  | |    | | |__     | |    |  \| |  /  \  | (___   /  \   
 |  ___/|  _  /| |  | |_   | |  __|    | |    | . ` | / /\ \  \___ \ / /\ \  
 | |    | | \ \| |__| | |__| | |____   | |    | |\  |/ ____ \ ____) / ____ \ 
 |_|    |_|  \_\\____/ \____/|______|  |_|    |_| \_/_/    \_\_____/_/    \_\
                                                                            
  ____             __                 
 |  _ \            \_\                
 | |_) | __ _ _ __ ___ _ __ ___   ___ 
 |  _ < / _` | '__/ _ \ '_ ` _ \ / _ \
 | |_) | (_| | | |  __/ | | | | |  __/
 |____/ \__,_|_|  \___|_| |_| |_|\___|
		
	Ce projet consiste en la création d'un logiciel pour visualiser les astéroîdes proches de la terre
	  grace a l'api de la nasa.
	
	  le sujet sera répartie en 3 parties: 
            -respect de la POO.
            -la récupération des donnée api de la nasa.
		 -la création du logicel et mise en place du visuel.

        chaqu'une de ces parties ont des consignes et contraintes vis a vis de leur gain de point.
        points de chaque partie:
            -partie 1 _POO_: 6 points
            --detail:
			 -respect des regles: 5 points
			 -projet qui fonctionne (sans erreur): 1 points
            -partie 2 _API_: 10 points
            --detail:
			 -recuperation de l'image du jour de la nasa: 2 points
			 -recuperation de liste des astéroide: 2 points
			 -recuperation du detail d'un astéroîde: 2 points
			 -maitrise de l'async: 4 points
            -partie 3 _VISUEL_: 4 points
            --detail:  
			 -ergonomie du logiciel: 2 points
			 -visuel du logiciel: 2 points 
		 -malus
            --detail:
                -noms des variables pas claires: -1.5 points
                -non respect des demandes de rendu: -2 points
                -code non commenté: -1.5 points
		 -bonus
		 --detail:
                -ajout d'une nouvelle donée de l'api dans votre visuel: 1 points
				(cumullable)
				(doit etre précisé dans un README)
				(ne peut etre obtenue que si le contenue de base est deja réalisé)
		
	le rendu devra etre fais sur gitea, dans un nouveau repertoire. Le namespace et nom du repertoire 
        de rendu devront etre votre "%pseudo_ytrack%_nasa" (exemple: pchesneau_nasa).
	
	date du rendu: 5 février 23h59
    
	Si un exercice rendu non commenté, reussi ou non, comporte des ressemblances que nous considéront 
        comme flagrantes avec des ressources en ligne, ou avec des exercices rendu par d'autres 
        étudiants, alors il sera considéré comme de la triche. 
	
	Toute triche resultera en a 0 pour l'etudiant. Non négociable.

  _____   ____   ____  
 |  __ \ / __ \ / __ \ 
 | |__) | |  | | |  | |
 |  ___/| |  | | |  | |
 | |    | |__| | |__| |
 |_|     \____/ \____/ 
                       
	regles:
        tout attribut doit etre privée.
        tout attribut doit avoir un geteur si il a vocation a etre récupéré dans une autre classe.
        tout attribut doit avoir un seteur.
        toutes les classes non-abstract doivent avoir un constructeur au complet.
        toutes méthodes doivent etre ecris en camelCase.
        toutes méthodes doivent etre privée par defaut, et public si elle a vocation a etre 
            récupéré dans une autre classe.
        toutes les classes doivent avoir un objectif precisé en commentaire.
        ces regles sont valable pour tout le projet.

           _____ _____ 
     /\   |  __ \_   _|
    /  \  | |__) || |  
   / /\ \ |  ___/ | |  
  / ____ \| |    _| |_ 
 /_/    \_\_|   |_____|

	lien utile pour recupérer les donner api: https://learn.microsoft.com/fr-fr/aspnet/web-api/overview/advanced/calling-a-web-api-from-a-net-client

	voici les lien de l'api:
		pour récupéré la votre clé: https://api.nasa.gov
		exemple de lien: https://api.nasa.gov/neo/rest/v1/feed?start_date=START_DATE&end_date=END_DATE&api_key=API_KEY
		
	vous devrez recupéré toutes les info nécéssaire a la partie VISUEL.
 __      _______  _____ _    _ ______ _      
 \ \    / /_   _|/ ____| |  | |  ____| |     
  \ \  / /  | | | (___ | |  | | |__  | |     
   \ \/ /   | |  \___ \| |  | |  __| | |     
    \  /   _| |_ ____) | |__| | |____| |____ 
     \/   |_____|_____/ \____/|______|______|
	
	lien d'un tuto complet pour faire des app windows fonctionelle: https://www.youtube.com/watch?v=wfWxdh-_k_4
	lien d'un tuto complet pour faire des app windows jolie: https://www.youtube.com/watch?v=PzP8mw7JUzI

	Paul est votre client pour ce projet, il est a l'écoute de vos proposition, et est conscient que tout n'est pas dit ici,
		donc n'ayez pas peur d'avoir des initiatives, et de demander au client differentes fonctionnalité.
	
	fonctionnalité:
		-avoir le nom de votre application d'afficher
		-le fond d'ecran de votre logiciel doit etre l'image de APOD
		-pouvoir cliquer sur un bouton pour avoir les information de l'image de APOD
		-pouvoir voir la liste des astéroîdes proche de la terre
			-nom
			-distance min
		-pouvoir selectionner un astéroide pour voir sa liste des approches passé, et future
	
	vous avez champ libre pour le visuel.


	tout dois etre mis en forme de facon ergonomique
